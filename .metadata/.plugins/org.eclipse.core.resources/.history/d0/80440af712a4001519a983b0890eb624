
public class StudentGroup {
	String groupSubject;
	Student[] students;
	private int freePlaces;
	
	// Тъй като има възможност студент, който е първи курс и не е специализирал все още да няма subject ,а ние имаме възможност да 
	// създадем и група без subject ще оставя възможност да се добавят студенти без subjects само в групи без subject
	
	StudentGroup() {
		students = new Student[5];
		freePlaces = 5;
	}
	
	StudentGroup(String subject){
		this();
		this.groupSubject = subject;
	}
	
	public void addStudent(Student student){
		if(this.freePlaces >= 1){
			if(this.groupSubject.equals(student.subject)){
				this.students[students.length - this.freePlaces] = student;
				this.freePlaces--;
			}
			else{
				System.out.println("Sorry the group subject doesn't match the students subject");
			}
		}
		else{
			System.out.println("Sorry there are no free places in this group");
		}
	}
	
	public void emptyGroup(){
		for(int i = 0; i < this.students.length; i++){
			this.students[i] = null;
		}
		this.freePlaces = this.students.length;
	}
	
	public String theBestStudent(){
		Student temp = new Student();
		temp.grade = this.students[0].grade;
		for(int i = 0; i < this.students.length; i++){
			if(this.students[i].grade > temp.grade){
				temp = this.students[i];
			}
		}
		return temp.getName();
	}
	
	public void printGroupInfo(){
		for(int i = 0; i < this.students.length; i++){
			this.students[i].printStudentInfo();
			System.out.println();
		}
	}

}


